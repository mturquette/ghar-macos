# directory prefix for downloading attachments
attachment_prefix = '~/Dropbox/Downloads'

# number of colours to use
colourmode = 256

# solarized color theme
#theme = default.theme
theme = solarized_dark.theme

# fill threadline with message content
display_content_in_threadline = True

# headers that get displayed by default
#displayed_headers = force_list(default=list(From,To,Cc,Bcc,Subject))

# headers that are hidden in envelope buffers by default
#envelope_headers_blacklist = force_list(default=list(In-Reply-To,References))

# how to print messages:
# this specifies a shell command used for printing.
# threads/messages are piped to this command as plain text.
# muttprint/a2ps works nicely
print_cmd = /usr/bin/lpr

# number of spaces to replace tab characters
tabwidth = 4

# initial command when none is given as argument:
#initial_command = 'search tag:inbox and tag:unread ; search tag:linux-clk and tag:unread ; search tag:flagged'
#initial_command = 'search tag:inbox and tag:unread ; search tag:linux-clk and tag:unread'
#initial_command = 'search tag:inbox ; search tag:needs-review ; search (tag:pw/new or tag:"pw/under review") and not tag:pw/archive'
initial_command = 'search (tag:pw/new or tag:"pw/under review") and not tag:pw/archive'

# in case more than one account has an address book:
# Set this to True to make tab completion for recipients during compose only
# look in the abook of the account matching the sender address
#complete_matching_abook_only = True

# shut down when the last buffer gets closed
quit_on_last_bclose = True

# editor command
# if unset, alot will first try the :envvar:`EDITOR` env variable, then :file:`/usr/bin/editor`
editor_cmd = 'vim -c "set textwidth=72" -c "set wrap" -c "set spell" -c "set nocp"'

[bindings]
g i = 'search tag:inbox and tag:unread'
g c = 'search tag:linux-clk and not tag:killed'
g s = 'search tag:flagged'
g t = 'search tag:sent'
g d = 'search tag:drafts'
u = bclose
d =
m =
c = compose
#q = cancel

	[[search]]
		a =
		! =
		s = toggletags flagged
		m =
		e = toggletags inbox
		I = toggletags unread
		#I = untag unread
		U = tag unread
		& = toggletags needs-review
		- = untag important
		+ = tag important

	[[thread]]
		a = reply --all
		s = toggletags flagged
		e = toggletags inbox
		I = untag unread
		U = tag unread
		& = toggletags needs-review
		- = untag important
		+ = tag important

		## Patch review bindings

		# Apply patch, then pass message-id to to script that adds Link: tag to patch commitlog
		| = "pipeto 'git am -s3' ; pipeto --format=id '~/.config/alot/hooks/add-link-tag-to-patch'"

		# Set state to Under Review in patchwork
		p u = "pipeto --background --format=id '~/.config/alot/hooks/set-pw-patch-state.fish Under Review'"
		# Set state to Accepted in patchwork
		p a = "pipeto --format=id '~/.config/alot/hooks/set-pw-patch-state.fish Accepted'"
		# Set state to Rejected in patchwork
		p r = "pipeto --format=id '~/.config/alot/hooks/set-pw-patch-state.fish Rejected'"
		# Set state to Not Applicable in patchwork
		p n = "pipeto --background --format=id '~/.config/alot/hooks/set-pw-patch-state.fish New'"
		# Set state to Changes Requested in patchwork
		p c = "pipeto --format=id '~/.config/alot/hooks/set-pw-patch-state.fish Changes Requested'"
		# Set state to Awaiting Upstream in patchwork
		p w = "pipeto --format=id '~/.config/alot/hooks/set-pw-patch-state.fish Awaiting Upstream'"
		# Set state to Superseded in patchwork
		p s = "pipeto --format=id '~/.config/alot/hooks/set-pw-patch-state.fish Superseded'"
		# Set state to Deferred in patchwork
		p d = "pipeto --format=id '~/.config/alot/hooks/set-pw-patch-state.fish Deferred'"

		# Fetch a patch from patchwork and apply it to git tree
		# Note: applies SoB and a Link: tags to the commit log
		p g = "pipeto --format=id ~/.config/alot/hooks/apply-pw-patch.fish"

[accounts]
	[[baylibre]]
		realname = Michael Turquette
		address = mturquette@baylibre.com
		gpg_key = C325A4D4
		sendmail_command = msmtpq -a baylibre -t
		#sendmail_command = msmtp -a baylibre -t
		#sent_box = maildir:///home/mturquette/mail/linaro
		#draft_box = maildir:///Users/mturquette/mail/baylibre/drafts

	# see,
	# http://alot.readthedocs.org/en/latest/configuration/contacts_completion.html
	# http://code.google.com/p/goobook/
	# address book for this account
#	[[[abook]]]
#		# type identifier for address book
#		type = option('shellcommand', 'abook', default=None)
#		# command to lookup contacts in shellcommand abooks
#		# it will be called with the lookup prefix as only argument
#		command = string(default=None)
#
#		# regular expression used to match name/address pairs in the output of `command`
#		# for shellcommand abooks
#		regexp = string(default=None)
#
#		# contacts file used for type 'abook' address book
#		abook_contacts_file = string(default='~/.abook/addressbook')

[tags]
	normal = 'bold','','dark cyan,bold','','#aaa',''

	[[flagged]]
		translated = ★
		normal = '','','light red','','light red',''
		focus = '','','light red','','light red',''

	[[unread]]
		translated = ✉
		normal = '','','dark blue','','dark blue',''
		focus = '','','dark blue','','dark blue',''

	[[replied]]
		translated = ✎
		normal = '','','dark green','','dark green',''
		focus = '','','dark green','','dark green',''

	[[signed]]
		translated = ⚷
		normal = '','','light red','','light red',''
		focus = '','','light red','','light red',''

	[[killed]]
		translated = ✝
		normal = '','','light red','','light red',''
		focus = '','','light red','','light red',''

	[[attachment]]
		translated = ✂
		normal = '','','light magenta','','light magenta',''
		focus = '','','light magenta','','light magenta',''

	[[inbox]]
		translated = '~'
		normal = '','','dark blue','','dark blue',''
		focus = '','','dark blue','','dark blue',''

	[[sent]]
		translated = ➥
		normal = '','','dark green','','dark green',''
		focus = '','','dark green','','dark green',''

	[[drafts]]
		translated = "✍"

	[[to-me]]
		translated = "☺"


#	[[.*]]
		#translated = ''
#		normal = '','','','','',''
